function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 01-Aug-2023 17:13:02.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx8 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.93242090478918;-555.57253969609;-5947732.16988263;-403.219807538088;0.778952980863222;-507.528003711434;-5759699.92748023;-400.714959966711];
x1_step1.gain = [0.490392256497794;0.00182747613343808;1.69460696365126e-07;0.00383902916378535;0.499055776690585;0.0018934233918363;1.69702246312616e-07;0.00618082898366953];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.8795544969780055844;3.1070821448198739922;1.1144558219168865243;0.58695461445285757041;-1.3178621642040333484;-0.44816726861340622223;1.2687096714109733497;1.1905779128828404279;-2.0797465693229666428;1.4408005372971310898];
IW1_1 = [0.34578414310980160051 2.2905388316005925731 -1.511219921154888457 0.89762372946759028114 0.93269165973770695732 -5.8736039425704733574 4.2617238527648186874 0.37697613275072860972;-4.6164128890753302059 -1.125953286137589382 -3.2795741248115501953 1.4203395821587339043 -2.3782165644525741222 -0.33151284554372018043 -0.69884236340113670138 -0.36756378753552926275;0.75889088412319771759 -1.9024628008869319817 -0.22326413079826412655 -0.73608203895629953362 0.1917963739465802786 0.3652983138074998859 -1.7187686595808053802 0.38371198201686013141;-1.2303573008408754674 -0.70821703472223596076 -2.4843508510308254245 2.1480406691343363335 -3.3650356207293596889 2.8207597385024247849 -4.0069925673745112604 -0.57247444707199379721;-1.1472107772764550404 1.8390300911187118515 -0.13489837028691809007 1.5307642319289995747 -1.2614785331429714255 0.03939828115253132812 1.303327967421489042 -0.39320576630868225854;-0.24371418643587128283 -5.555218051600553153 4.8928125220503924098 0.20254144164342519074 0.11419325576459453397 -1.5273433823281710175 1.3014624353470927165 0.072032494353655954211;0.10740910771896654274 5.2223252087680540612 -4.3223658747007096537 -0.97187824915752518695 0.11562636092371819663 -4.7653179502008811141 4.5962484296505481396 0.065788142115978776037;0.9349965304594388682 -1.9071235212479851207 0.0034610405043224989896 -1.1170977776531110237 0.70089707439140314094 0.18921136913195099605 -1.5032937583658474434 0.37891842172787676413;-0.64583918289047947958 -1.9001120700458768997 -0.87320551637745391638 2.4249137139946848052 -2.300401211220442832 -2.6168152771973534065 2.8634986768249466316 -1.1342335584792899716;0.91732572681944646309 -7.4017991450029132494 6.7877912420065884547 0.361386286841655191 0.68309740836368471051 -1.0391908784332317683 0.17688511733861345121 0.38865778818281226936];

% Layer 2
b2 = 0.10030723944213819354;
LW2_1 = [0.30850113927048034013 0.0030017580363764675803 3.1633809628536262437 -0.086104255557093736795 -2.8482557147917697549 -0.70836450757152036317 -0.44812690528527582279 -6.0055709588002628152 -0.063975901102000728993 -0.49369647471522370985];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0500120781778786;
y1_step1.xoffset = -19.9971457141022;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
