function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 13-Aug-2023 10:46:47.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx8 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.841390926769257;-298.742189739349;-3119173.45336956;-314.826455782431;0.793117062828897;-289.793072561542;-2992385.15740028;-310.175534592436];
x1_step1.gain = [3.18844888436908;0.00330103261491783;3.13472398405095e-07;0.00641571908329818;2.93242890919636;0.00343275449143263;3.24846926729885e-07;0.00897814447323151];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.9034112819920250281;-2.0469098671549330604;-0.24208207260510808401;-1.3486127362274744623;-0.50576607393636785481;0.54246020340652578717;-0.76613289134637452271;0.22078546571117993458;0.33475527143750127834;0.45658228284252377893;1.2669578440999174074;2.289608775175084876;-1.0698080421784239569;-2.1311724905118798468;0.11447172888735404617;0.65022608895114697436;-0.88405010111396875594;-1.1362552581106408756;1.2267152035182136149;-0.29504119316737786871];
IW1_1 = [-2.2228004678117438964 -5.7767186338979996663 8.2022474767051996025 0.17421345428608128736 -0.46136291073819796216 -0.82102814457314909902 0.35402726015078089805 -0.33617108945365653527;-1.7632411353590762282 -2.6773568731556278699 3.5528350580462735309 0.42144702140631229437 0.24472675732070817145 1.5535794980761463702 -1.2671715414745132744 -0.28754296078057789421;0.20299884006064286557 1.9554915082857953212 -0.99742700434101039253 0.1443824768806828418 0.74722689425235011562 -0.90184017664652971202 1.8608939697892015186 -0.051557122035585732645;1.005295655151980716 -0.35369632843091702856 3.4075476107785878099 0.48525830519766444127 -2.2417251977467267388 -1.0142190891425479915 2.0083992076424959095 0.35741381625641460706;2.2803761918680733878 7.0222934190004711041 -6.9717903936183711622 0.060390677908371756533 -0.093033868112688683505 1.2332312673781276047 -1.5697405222815832282 0.58327199540462448812;-2.2248999395567996551 -0.062406273110807902738 -0.26485706391831942419 0.03562551521126995635 1.7384059469768162742 0.21425262354679655563 -1.3526838869436890178 -0.58759461223630082838;-2.0022387599859516882 4.6977384431361146611 -4.9730598965130763389 -0.079267304209750172328 0.82824569875836784316 0.094241659756465590014 -0.46946364053343020428 -0.16570358700743237357;-0.8214883161586552518 0.48159514982457357624 0.93822642238539066817 0.26510903539544555807 0.34914327269959655187 0.1498244834369009959 0.017419423520746150913 -0.22190260711630530044;-1.8058298484304122766 -6.56729721114262599 6.5122812238666298867 -0.028218449980711570596 0.12210743862778473956 -0.59560399671835029256 0.8536555255756637095 -0.44426012362843297909;-2.1071714766261449014 0.12810776396591769255 -0.57640841049687729924 0.076391625848582625502 1.7206181293267106547 0.016454425291438055934 -1.0252460124626534554 -0.5737248437782717092;2.2557593774896798067 -11.114519478075955305 10.334947925492318888 -0.13939208463755731193 1.3364558565022763847 0.34521390671877283385 0.94380009689081245661 0.65158853838895536281;0.084918396462341269593 1.6392588776146561624 -0.56732449925312655736 -1.4029946054229165409 -1.3695635861203820927 0.60096669104293320984 -0.19992005688803821117 0.60970525275965015144;-0.36547579320071660325 1.2649231113713905739 -1.5507427113621869985 0.76094093069486523628 0.8103304171202724282 -3.4488919344626163266 3.5218553400335879111 -0.13624965220582871406;-1.4656247790666045994 -2.9989352539068914183 3.9626522736852693996 0.27798406750638626761 -0.10992883969976743885 0.75054474860983755313 -0.58224649981624165829 -0.18257855211483123292;-0.56458730385029520793 0.50856216843133894567 0.79825597591280805787 0.25676060260319982786 0.39353602988907693261 0.048977901160517103851 0.24917120271131740217 -0.21050116876922231324;0.60817320096268778773 0.80917642341053164223 -2.4242194217113852694 0.55541592392346350593 0.067076300236896535534 -2.2809869126105293269 3.1783054978226754628 -0.24378651387105942927;-2.0103189450079756995 4.9506483043790074916 -5.2643324535714652868 0.0020434766501145730858 0.80825476073125424037 -0.17780084143268037877 -0.12715287724862445184 -0.21919942794728669577;0.46318127164068184642 -0.10256950768490466497 3.3496270360888908968 0.61317744917082084299 -2.4843027897352514266 -1.3620980534887296987 1.9806662756308262008 0.15882693176884035702;-0.71834581185182166951 0.24307083510392246684 -3.365306535960661094 -0.53447837833213507341 2.3274809176791015908 1.1483926606798906533 -1.9453933604451392192 -0.25864805823305608845;-0.36850890525004414977 2.2784494586033159358 -1.9039117179064422025 -0.30073533378191424914 -2.1092914098969202108 8.3090471827027201357 -9.4197468311650460748 -0.0469394956175898867];

% Layer 2
b2 = 1.2186063625164018642;
LW2_1 = [-1.0015193121555914235 -2.9777560274042569333 -0.4729518311557664445 -5.068290888743774758 0.91993076512478089146 2.6717579231366146431 -2.6589069481602303213 -2.8526334909877317791 1.2472776375504148749 -2.8353589985165372767 0.11372891271093713006 0.35196184060023416595 0.60023077231258159525 4.7722293880798876131 3.3122242846211760181 -0.31454013152892806859 2.7674247543263352789 -4.6299390900918906411 -9.8331226299274163694 -0.086719856464325451029];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0200002843248217;
y1_step1.xoffset = -49.9994494895271;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
