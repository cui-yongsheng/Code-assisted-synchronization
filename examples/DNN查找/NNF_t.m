function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 13-Aug-2023 10:48:19.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx8 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.841390926769257;-298.742189739349;-3119173.45336956;-314.826455782431;0.793117062828897;-289.793072561542;-2992385.15740028;-310.175534592436];
x1_step1.gain = [3.18844888436908;0.00330103261491783;3.13472398405095e-07;0.00641571908329818;2.93242890919636;0.00343275449143263;3.24846926729885e-07;0.00897814447323151];
x1_step1.ymin = -1;

% Layer 1
b1 = [-4.9238296123461031684;-1.0577820283720893446;1.8559051629137190975;1.2506097276855645539;2.4931204853717363612;-3.3263414742266319557;-0.21663532531497539657;-2.0489181871335371277;0.67210661288157202975;-0.79166722686563384404;0.33975318459596504095;-1.1726788152589309178;1.1117062118767575551;-0.65920311974003598099;-0.3523380993491734281;-0.95957899405305113749;-0.7426430590838226653;0.39849657279145511701;-4.6404228655878059229;-1.4881332354893608283];
IW1_1 = [-4.657851185831034968 1.6341888548521912305 1.283163388046921094 1.2244718790232373973 -0.76286312771995856696 1.2416644885753862493 0.32065679606351815689 -1.9663102634758728993;0.64183726435243271258 -1.8969480675740608699 2.1412220238108679027 0.85743818120480530531 0.14598570447569964026 -0.36319291536646275409 -0.74367045091814720781 0.3018240257549201222;1.1794370333447454779 -0.60569611519189692217 0.49084192664157338948 2.670863920247279033 -0.73521787578972463972 -1.2922706895074762556 2.5411022915655130383 -0.51606973614832085673;-0.071955148869977322845 1.2840815028003231824 0.11698460546648284386 2.1432959498579120527 0.14361668669496724382 0.49661955784963862648 0.09226790096668183172 -1.8407841788520871162;-0.14409079687221734711 0.20024105161467964376 -0.68472277777880719007 0.30920893386959164006 0.36988829206378398551 -0.37620780014613203202 0.17342211340788188378 -1.6857387550506186535;-1.2666627696654644275 -2.2888280132227842856 0.059946213477909980616 3.3566946459304589645 -0.38769567828552359279 1.7039570685560676555 0.14908155729316666105 3.3069258068499087777;0.64300233157112063331 -0.46304150786110803706 0.73312458188628226718 0.6130421946623290097 -0.62250745285062103473 0.048749377448227472487 -0.66808879495026141093 -0.5398047769070074553;1.5822339699455798545 -0.071500123652655026008 -0.77397192049517038459 0.44166224827530076169 -1.611200633626870049 0.13116618206280938885 0.95098795615016940008 -0.71904610975470206746;-0.91293614760817309861 -0.36377030500337098617 0.15687662143786620939 -3.928248131845444302 0.98623714994392741584 1.2434476685452418021 -0.76676497855749337074 -0.54278638515285004829;0.88266431607942952287 0.39508311505729132307 0.023175447989442876651 3.8673960892458461025 -0.91273981263299264199 -1.2186896631280659253 0.60179937485007983788 0.14466589312089170316;0.27805296020167524773 2.1601133175234275008 -1.8246685510725120238 0.9458169268380518524 0.468121144043333548 -1.2298798708473894781 0.77144465946372042797 0.18642515378255455905;-0.91291308373626289807 -0.74507296098501696324 -0.60913742818045624183 2.387044552796115493 -0.23642626501484914625 0.03872761502949882001 0.4238782345268582441 -0.98686319034814118378;0.088247694042337870846 1.2794365789755524077 0.087357293914368167043 2.0150676675868175458 0.0034408385719981002433 0.22573749938445375474 0.085341495468879050024 -1.7773014255796315553;-0.62929324514698348203 1.0539084547075567855 -1.6427735132224734471 -0.70101391292849368764 -0.036961228458462759561 0.95505636106250169082 0.67135685227129870967 -0.29820728071282620597;1.0011300988411124813 -0.22726244559120087341 0.66384547788814218805 0.92051410451458492989 -1.0180959790435397672 -0.36011932281716563242 -0.5426244073840454929 -1.0560713429207819747;0.95438743429272809848 0.46653403789049213701 0.17316529019877638373 4.0011546046088826145 -0.95591331588231553962 -1.2961135335496576371 0.47349418739671939038 -0.25583129787274772049;-0.73445583207917963797 0.026023584164555753351 0.63546435847719873191 0.48131806438323987418 1.0127874604504001343 0.033772657229450067651 -1.0670666839160360961 0.28594307273762009647;-0.0028266963131650352063 0.45350485000593476759 -0.30037840986890346207 -0.069758520744449895035 -0.2717821010847561447 0.63205611937541561485 -0.60818877505172730391 -0.23840007890071091001;-4.4042073057143786841 1.3686980486270385882 1.1480589912762524385 1.1718772176535283691 -0.92047867888691181637 1.2665391782332102721 0.2818163049609643811 -1.8959560694531911729;-0.66665562659612687124 -0.89217233145256868987 -0.7719806420042224504 2.5863866447112764391 -0.56670651951575345961 0.083567706447567141614 0.68833227732755053463 -1.1899594239332436096];

% Layer 2
b2 = -1.2083117939767333837;
LW2_1 = [1.419109379855996389 1.0782713757991018166 0.17131548903346152657 1.2517331876340376251 0.46383116258113515906 -0.073944550333907690942 -3.4533410531395780652 0.2877209729741730948 -3.1990692771582791565 -6.6950367048721748375 -0.28798816779768560137 -0.67662609773044368744 -1.4839784289000543804 -0.82524307521955786449 1.4267802372023223878 3.2929054015733583149 -0.47195275957445909087 2.1544577900186547836 -1.4676265149040870206 0.68175319880144913398];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 1.00003261295965;
y1_step1.xoffset = -0.999951917767834;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
